<tool id="5c94b884-0c7b-48c1-8226-6c47c493efc6" name="Simple Bash based test " version="0.0.2">
    <description>Test for simple bash command on nubis cluster</description>
    <creator>
      <person givenName="Marco Lettere" email="marco.lettere@nubisware.com"/>
      <organization name="D4Science"/>
    </creator>
    <command><![CDATA[python3 $__tool_directory__/run.py]]></command>
    <configfiles>
        <configfile name="request" filename="request.json"><![CDATA[#slurp
{
    "inputs":{
        "ccpimage":"$ccpimage",
        "sandbox":"$sandbox"
    },
    "outputs":{
        "output":{
            "transmissionMode":"value"
        }
    },
    "response":"raw"
}]]></configfile>
    </configfiles>
    <environment_variables>
      <environment_variable name="OIDC_ACCESS_TOKEN" inject="oidc_access_token_keycloak"/>
      <environment_variable name="OIDC_REFRESH_TOKEN" inject="oidc_refresh_token_keycloak"/>
      <environment_variable name="ccp_ep">https://ccp.cloud-dev.d4science.org</environment_variable>
      <environment_variable name="ccp_method_id">5c94b884-0c7b-48c1-8226-6c47c493efc6</environment_variable>
      <environment_variable name="context">%2Fgcube%2Fdevsec%2FCCP</environment_variable>
      <environment_variable name="auth_ep">https://accounts.dev.d4science.org/auth/realms/d4science/protocol/openid-connect/token</environment_variable>
    </environment_variables>
    <inputs>
      <param name="ccpimage" value="nubisware/simpleimageclassifier:latest" type="text" optional="false" label="Runtime" help="The image of the runtime to use for method execution. This depends on the infrastructure specific protocol for interacting with registries."></param>
      <param name="sandbox" type="text" optional="false" label="Sandbox" 
        value="IyEvYmluL2Jhc2gKCnVzZXI9Im0ubGV0dGVyZSIKY29udGV4dD0iJTJGZDRzY2llbmNlLnJlc2VhcmNoLWluZnJhc3RydWN0dXJlcy5ldSUyRkQ0T1MlMkZCbHVlLUNsb3VkVHJhaW5pbmdMYWIiCmF1dGhfZXA9Imh0dHBzOi8vYWNjb3VudHMuZDRzY2llbmNlLm9yZy9hdXRoL3JlYWxtcy9kNHNjaWVuY2UvcHJvdG9jb2wvb3BlbmlkLWNvbm5lY3QvdG9rZW4iCmNsaWVudF9pZD0iYmx1ZS1jbG91ZC5kNHNjaWVuY2Uub3JnIgpjY3BfZXA9Imh0dHBzOi8vY2NwLmNsb3VkLmQ0c2NpZW5jZS5vcmciCgojVE9LRU49eW91ciB0b2tlbgojb3IgZ2V0IG9uZSB3aXRoIGNyZWRlbnRpYWxzIGFzIGZvbGxvd3M6CnJlYWQgLXMgLXAgIlBhc3N3b3JkOiAiIHBhc3N3CmVjaG8KCnRva2VuPSQod2dldCAtcSAtTyAtIC0taGVhZGVyPSJYLUQ0U2NpZW5jZS1Db250ZXh0OiAkY29udGV4dCIgLS1oZWFkZXI9IkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiAtLXBvc3QtZGF0YT0iZ3JhbnRfdHlwZT1wYXNzd29yZCZ1c2VybmFtZT0kdXNlciZwYXNzd29yZD0kcGFzc3cmY2xpZW50X2lkPSRjbGllbnRfaWQiICRhdXRoX2VwIHwganEgLXIgIi5hY2Nlc3NfdG9rZW4iKQoKcmVxdWVzdD0newogICJpbnB1dHMiOnsKICAgICJjY3BpbWFnZSI6ImJhc2giLAogICAgImVudnZhciI6ImRlZmF1bHR2YWx1ZSIsCiAgICAid3NsaW5rIjoiaHR0cHM6Ly9hcGkuZDRzY2llbmNlLm9yZy93b3Jrc3BhY2UvaXRlbXMvNjBkMjQyZWMtYTZkNC00YzM0LThjNjQtMDU5OGM4ZDUyMDViL2Rvd25sb2FkIiwKICAgICJib29sIjoidHJ1ZSIsCiAgICAibnVtIjoiMSIsCiAgICAiY2hvaWNlIjoiYiIKICB9LAogICJvdXRwdXRzIjp7CiAgICAic3Rkb3V0Ijp7CiAgICAgICJ0cmFuc21pc3Npb25Nb2RlIjoidmFsdWUiCiAgICB9LAogICAgInN0ZGVyciI6ewogICAgICAidHJhbnNtaXNzaW9uTW9kZSI6InZhbHVlIgogICAgfQogIH0sCiAgInJlc3BvbnNlIjoicmF3Igp9JwoKcmVzcD0kKHdnZXQgLXEgLU8gLSAtLXBvc3QtZGF0YT0iJHJlcXVlc3QiIC0taGVhZGVyPSJBdXRob3JpemF0aW9uOiBCZWFyZXIgJHRva2VuIiAtLWhlYWRlcj0iQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiAkY2NwX2VwL3Byb2Nlc3Nlcy9lYzVlMDFlNS0xYmJkLTQ3NTctYTQyNS04MDEzM2FlMWY0NmIvZXhlY3V0aW9uKQpqb2JpZD0kKGVjaG8gJHJlc3AgfCBqcSAtciAiLmpvYklEIikKam9ic3RhdHVzPSQoZWNobyAkcmVzcCB8IGpxIC1yICIuc3RhdHVzIikKZWNobyBKb2IgaXMgJGpvYnN0YXR1cwoKd2hpbGUgW1sgJGpvYnN0YXR1cyAhPSAic3VjY2Vzc2Z1bCIgJiYgJGpvYnN0YXR1cyAhPSAiZmFpbGVkIiBdXTsgZG8KICAgIHNsZWVwIDUKICAgIHJlc3A9JCh3Z2V0IC1xIC1PIC0gLS1oZWFkZXI9IkF1dGhvcml6YXRpb246IEJlYXJlciAkdG9rZW4iICRjY3BfZXAvam9icy8kam9iaWQpCiAgICBqb2JzdGF0dXM9JChlY2hvICRyZXNwIHwganEgLXIgIi5zdGF0dXMiKQogICAgZWNobyBKb2IgaXMgJGpvYnN0YXR1cwogICAgI3JlZnJlc2ggdG9rZW4KICAgIHRva2VuPSQod2dldCAtcSAtTyAtIC0taGVhZGVyPSJYLUQ0U2NpZW5jZS1Db250ZXh0OiAkY29udGV4dCIgLS1oZWFkZXI9IkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiAtLXBvc3QtZGF0YT0iZ3JhbnRfdHlwZT1wYXNzd29yZCZ1c2VybmFtZT0kdXNlciZwYXNzd29yZD0kcGFzc3cmY2xpZW50X2lkPSRjbGllbnRfaWQiICRhdXRoX2VwIHwganEgLXIgIi5hY2Nlc3NfdG9rZW4iKQpkb25lCgojIGRvd25sb2FkIG91dHB1dHMKd2dldCAtcSAtLWhlYWRlcj0iQXV0aG9yaXphdGlvbjogQmVhcmVyICR0b2tlbiIgJGNjcF9lcC9leGVjdXRpb25zLyRqb2JpZC9vdXRwdXRzL291dHB1dC56aXA="
        help="Sandbox to test a lot of possibilities"></param>
    </inputs>
    <outputs>
        <data name="stdout.txt" label="Standard output" from_work_dir="stdout.txt" format="txt"/>
        <data name="output" auto_format="true" from_work_dir="output/1.txt" label="output/1.txt"/>
    </outputs>
    <tests>
    </tests>
    <help>
A simple image classifier with parametrizable url to input picture compatible with the D4Science infrastructure
    </help>
  </tool>